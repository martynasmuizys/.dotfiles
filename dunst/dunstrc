
[global]

    ### Display ###

    # Display notifications on monitor with mouse focus
    follow = mouse
    # Set {width}x{height} and {x_pos}+{y_pos}
    geometry = "300x30-10+30"
    # Show number of hidden notifications
    indicate_hidden = yes
    # Shrink window if smaller than width
    shrink = no
    # Set transparency of notifications
    transparency = 0
    # Height of whole notification
    notification_height = 0
    # Height of seperators
    separator_height = 2
    # Text and seperator padding
    padding = 8
    # Horizontal padding
    horizontal_padding = 8
    # Width of frame around window
    frame_width = 1
    # Color of frame around window
    frame_color = "#EB6F92"
    # Sort messages by urgency
    sort = yes
    # Idle seconds
    idle_threshold = 0

    ### Text ###

    # Set font of notifications
    font = Iosevka 10
    # Spacing between lines
    line-height = 0
    # Markup parsing
    markup = full
    # Message format:
    # %a - appname
    # %s - summary
    # %b - body
    # %i - iconname (with path)
    # %I - iconname (without path)
    # %p - progress value (if set)
    # %n - progress value no extra characters
    # %% - literal %
    format = "<b>%a</b>\n<i>%s</i>\n%b"
    # Align message text horizontally
    alignment = left
    # Align message text vertically
    vertical_alignment = center
    # Show age of message if message is older than x seconds
    show_age_threshold = -1
    # Split notifications into multiple lines
    word_wrap = no
    # If message too long, add ellipsize to...
    ellipsize = middle
    # Ignore newlines in notifications
    ignore_newline = no
    # Stack duplicate notifications
    stack_duplicates = true
    # Hide number of duplicate notifications
    hide_duplicate_count = true
    # Show indicatiors  for urls and actions
    show_indicators = no

    ### Icons ###

    # Disable icons
    icon_position = off

    ### History ###

    # Length of history
    history_length = 20

    ### Misc ###

    # Dmenu path
    dmenu = /usr/bin/dmenu -p dunst:
    # Browser
    browser = /usr/bin/firefox -new-tab
    # Always run scripts
    always_run_script = true
    # Title of notification
    title = Dunst
    # Notification class
    class = Dunst
    # Print notification on startup
    startup_notification = false
    # Dunst verbosity
    verbosity = mesg
    # Corner radius of dunst
    corner_radius = 15
    # Ignore dbus closeNotification message
    ignore_dbusclose = false

    ### Mouse ###

    # Left click
    mouse_left_click = close_current
    # Middle click
    mouse_middle_click = do_action
    # Right click
    mouse_right_click = do_action

[shortcuts]

    # Close one notification
    close = ctrl+space
    # Close all notifications
    close_all = ctrl+shift+space

[urgency_normal]

    # Normal urgency notifications
    background = "#202632"
    foreground = "#ffffff"
    timeout = 5

[urgency_critical]

    # High urgency notifications
    background = "#ffffff"
    foreground = "#db0101"
    timeout = 0

# Every section that isn't one of the above is interpreted as a rules to
# override settings for certain messages.
#
# Messages can be matched by
#    appname (discouraged, see desktop_entry)
#    body
#    category
#    desktop_entry
#    icon
#    match_transient
#    msg_urgency
#    stack_tag
#    summary
#
# and you can override the
#    background
#    foreground
#    format
#    frame_color
#    fullscreen
#    new_icon
#    set_stack_tag
#    set_transient
#    set_category
#    timeout
#    urgency
#    icon_position
#    skip_display
#    history_ignore
#    action_name
#    word_wrap
#    ellipsize
#    alignment
#    hide_text
#
# Shell-like globbing will get expanded.
#
# Instead of the appname filter, it's recommended to use the desktop_entry filter.
# GLib based applications export their desktop-entry name. In comparison to the appname,
# the desktop-entry won't get localized.
#
# SCRIPTING
# You can specify a script that gets run when the rule matches by
# setting the "script" option.
# The script will be called as follows:
#   script appname summary body icon urgency
# where urgency can be "LOW", "NORMAL" or "CRITICAL".
#
# NOTE: It might be helpful to run dunst -print in a terminal in order
# to find fitting options for rules.

# Disable the transient hint so that idle_threshold cannot be bypassed from the
# client
#[transient_disable]
#    match_transient = yes
#    set_transient = no
#
# Make the handling of transient notifications more strict by making them not
# be placed in history.
#[transient_history_ignore]
#    match_transient = yes
#    history_ignore = yes

# fullscreen values
# show: show the notifications, regardless if there is a fullscreen window opened
# delay: displays the new notification, if there is no fullscreen window active
#        If the notification is already drawn, it won't get undrawn.
# pushback: same as delay, but when switching into fullscreen, the notification will get
#           withdrawn from screen again and will get delayed like a new notification
#[fullscreen_delay_everything]
#    fullscreen = delay
#[fullscreen_show_critical]
#    msg_urgency = critical
#    fullscreen = show

#[espeak]
#    summary = "*"
#    script = dunst_espeak.sh

#[script-test]
#    summary = "*script*"
#    script = dunst_test.sh

#[ignore]
#    # This notification will not be displayed
#    summary = "foobar"
#    skip_display = true

#[history-ignore]
#    # This notification will not be saved in history
#    summary = "foobar"
#    history_ignore = yes

#[skip-display]
#    # This notification will not be displayed, but will be included in the history
#    summary = "foobar"
#    skip_display = yes

#[signed_on]
#    appname = Pidgin
#    summary = "*signed on*"
#    urgency = low
#
#[signed_off]
#    appname = Pidgin
#    summary = *signed off*
#    urgency = low
#
#[says]
#    appname = Pidgin
#    summary = *says*
#    urgency = critical
#
#[twitter]
#    appname = Pidgin
#    summary = *twitter.com*
#    urgency = normal
#
#[stack-volumes]
#    appname = "some_volume_notifiers"
#    set_stack_tag = "volume"
#
# vim: ft=cfg
